{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/macworld/Desktop/test/recruitment-site/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { useState } from 'react';\n\nexport default function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const navLinks = [\n    { href: \"#about\", label: \"About\" },\n    { href: \"#platform\", label: \"Platform\" },\n    { href: \"#community\", label: \"Community\" },\n    { href: \"#contact\", label: \"Contact\" }\n  ];\n\n  return (\n    <header className=\"bg-white/95 backdrop-blur-sm border-b border-gray-100 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center py-4\">\n          {/* Logo */}\n          <div className=\"flex-shrink-0\">\n            <Link href=\"/\" className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-black rounded-lg flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <span className=\"text-2xl font-bold text-gray-900\">RecruitAI</span>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex space-x-8\">\n            {navLinks.map(({ href, label }) => (\n              <Link\n                key={href}\n                href={href}\n                className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium relative group\"\n              >\n                {label}\n                <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-black transition-all duration-300 group-hover:w-full\"></span>\n              </Link>\n            ))}\n          </nav>\n\n          {/* CTA Button */}\n          <div className=\"hidden md:flex\">\n            <button className=\"bg-black text-white px-6 py-2.5 rounded-lg hover:bg-gray-800 transition-all duration-300 font-medium shadow-sm hover:shadow-md\">\n              Get Started\n            </button>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-600 hover:text-gray-900 p-2\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                {isMenuOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isMenuOpen && (\n          <div className=\"md:hidden py-4 border-t border-gray-100\">\n            <div className=\"flex flex-col space-y-4\">\n              {navLinks.map(({ href, label }) => (\n                <Link\n                  key={href}\n                  href={href}\n                  className=\"text-gray-600 hover:text-gray-900 font-medium\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {label}\n                </Link>\n              ))}\n              <button className=\"bg-black text-white px-6 py-2.5 rounded-lg hover:bg-gray-800 transition-colors w-fit font-medium\">\n                Get Started\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n} "],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,2PAAQ,EAAC;IAE7C,MAAM,WAAW;QACf;YAAE,MAAM;YAAU,OAAO;QAAQ;QACjC;YAAE,MAAM;YAAa,OAAO;QAAW;QACvC;YAAE,MAAM;YAAc,OAAO;QAAY;QACzC;YAAE,MAAM;YAAY,OAAO;QAAU;KACtC;IAED,qBACE,wRAAC;QAAO,WAAU;kBAChB,cAAA,wRAAC;YAAI,WAAU;;8BACb,wRAAC;oBAAI,WAAU;;sCAEb,wRAAC;4BAAI,WAAU;sCACb,cAAA,wRAAC,iNAAI;gCAAC,MAAK;gCAAI,WAAU;;kDACvB,wRAAC;wCAAI,WAAU;kDACb,cAAA,wRAAC;4CAAI,WAAU;4CAAqB,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACzE,cAAA,wRAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;kDAGzE,wRAAC;wCAAK,WAAU;kDAAmC;;;;;;;;;;;;;;;;;sCAKvD,wRAAC;4BAAI,WAAU;sCACZ,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,iBAC5B,wRAAC,iNAAI;oCAEH,MAAM;oCACN,WAAU;;wCAET;sDACD,wRAAC;4CAAK,WAAU;;;;;;;mCALX;;;;;;;;;;sCAWX,wRAAC;4BAAI,WAAU;sCACb,cAAA,wRAAC;gCAAO,WAAU;0CAAiI;;;;;;;;;;;sCAMrJ,wRAAC;4BAAI,WAAU;sCACb,cAAA,wRAAC;gCACC,SAAS,IAAM,cAAc,CAAC;gCAC9B,WAAU;0CAEV,cAAA,wRAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,SAAQ;oCAAY,QAAO;8CAC7D,2BACC,wRAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;6DAErE,wRAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAQ9E,4BACC,wRAAC;oBAAI,WAAU;8BACb,cAAA,wRAAC;wBAAI,WAAU;;4BACZ,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,iBAC5B,wRAAC,iNAAI;oCAEH,MAAM;oCACN,WAAU;oCACV,SAAS,IAAM,cAAc;8CAE5B;mCALI;;;;;0CAQT,wRAAC;gCAAO,WAAU;0CAAmG;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnI","debugId":null}}]
}